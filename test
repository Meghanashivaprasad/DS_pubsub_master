from http.server import BaseHTTPRequestHandler, HTTPServer
from jsonrpclib import Server
import time
import threading
import random

class Sender(threading.Thread):
    # ... (rest of the Sender class remains unchanged)

class handler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()

        message = "Hello, World!"
        self.wfile.write(bytes(message, "utf8"))

    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length).decode('utf-8')
        form_data = {k: v for k, v in (item.split('=') for item in post_data.split('&'))}
        thread_name = form_data.get("sender")
        chanel_name = form_data.get("channel_name")
        number_of_message_on_channel_1 = int(form_data.get("num_msg"))
        message_type = form_data.get("msg_type")
        game_id = int(form_data.get("id"))
        
        self.send_response(200)
        self.end_headers()
        full_thread_name = "Sender : " + thread_name + " on " + chanel_name
        worker = Sender(thread_name, chanel_name, full_thread_name, number_of_message_on_channel_1, message_type, game_id)
        worker.start()

if __name__ == '__main__':
    with HTTPServer(('', 5500), handler) as server:
        server.serve_forever()

